// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: center.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createCenter = `-- name: CreateCenter :one
INSERT INTO center(center_id, owner_name, logo_url, location)
VALUES ($1, $2, $3, $4)
RETURNING center_id, owner_name, logo_url, location
`

type CreateCenterParams struct {
	CenterID  uuid.UUID
	OwnerName pgtype.Text
	LogoUrl   pgtype.Text
	Location  pgtype.Text
}

func (q *Queries) CreateCenter(ctx context.Context, arg CreateCenterParams) (Center, error) {
	row := q.db.QueryRow(ctx, createCenter,
		arg.CenterID,
		arg.OwnerName,
		arg.LogoUrl,
		arg.Location,
	)
	var i Center
	err := row.Scan(
		&i.CenterID,
		&i.OwnerName,
		&i.LogoUrl,
		&i.Location,
	)
	return i, err
}

const createEmptyCenter = `-- name: CreateEmptyCenter :one
INSERT INTO center(center_id)
VALUES ($1)
RETURNING center_id, owner_name, logo_url, location
`

func (q *Queries) CreateEmptyCenter(ctx context.Context, centerID uuid.UUID) (Center, error) {
	row := q.db.QueryRow(ctx, createEmptyCenter, centerID)
	var i Center
	err := row.Scan(
		&i.CenterID,
		&i.OwnerName,
		&i.LogoUrl,
		&i.Location,
	)
	return i, err
}
